output {

if "_jsonparsefailure" in [tags] or "grok_syslog_fail" in [tags] {
    elasticsearch {
      hosts => ["${ES_HOST:https://172.16.60.1:9200}"]
      index => "deadletter-rz-%{+yyyy.MM.dd}"
      user => "${ES_USER:elastic}"
      password => "${ES_PASS:HBDEYyG7DN0QjI0eEFMn}"
      ssl_verification_mode => "none"
      ssl => true
      cacert => "${ES_CA:/usr/share/logstash/config/certs/ca/elastic-stack-ca.crt}"
    }
  } else if [service][name] == "hpe-storage" {
    # HPE Storage: Status-Index ohne ILM, Update-basiert
    elasticsearch {
      hosts => ["${ES_HOST:https://172.16.60.1:9200}"]
      index => "status-%{[labels][kunde]:default}-hpe-storage-000001"
      document_id => "%{[host][name]}-%{[hpe][ctrl][serial_number]:%{[hpe][ld][unique_identifier]:%{[hpe][pd][wwid]:%{[hpe][pd][bay]}}}}"
      action => "upsert"
      doc_as_upsert => true
      user => "${ES_USER:elastic}"
      password => "${ES_PASS:HBDEYyG7DN0QjI0eEFMn}"
      ssl_verification_mode => "none"
      ssl => true
      cacert => "${ES_CA:/usr/share/logstash/config/certs/ca/elastic-stack-ca.crt}"
    }
  } else if [@metadata][es_alias] {
    elasticsearch {
      hosts => ["${ES_HOST:https://172.16.60.1:9200}"]
      index => "%{[@metadata][es_alias]}"   # direkt in den Write‑Alias
      action => "index"
      user => "${ES_USER:elastic}"
      password => "${ES_PASS:HBDEYyG7DN0QjI0eEFMn}"
      ssl_verification_mode => "none"
      ssl => true
      cacert => "${ES_CA:/usr/share/logstash/config/certs/ca/elastic-stack-ca.crt}"
      # Pipelines in ES optional, z. B. für geoip – hier nicht nötig
    }
  } else {
    # Fallback falls kein Alias gesetzt wurde
    elasticsearch {
      hosts => ["${ES_HOST:https://172.16.60.1:9200}"]
      index => "unrouted-%{+yyyy.MM.dd}"
      user => "${ES_USER:elastic}"
      password => "${ES_PASS:HBDEYyG7DN0QjI0eEFMn}"
      ssl_verification_mode => "none"
      ssl => true
      cacert => "${ES_CA:/usr/share/logstash/config/certs/ca/elastic-stack-ca.crt}"
    }
  }

stdout { codec => rubydebug { metadata => true } }

}
