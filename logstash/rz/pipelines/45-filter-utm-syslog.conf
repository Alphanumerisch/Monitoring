filter {
  if [event][dataset] == "utm.syslog" or [service][name] == "utm" {
    # Nur Paketfilter-Logs (ulogd) mit ACCEPT/DROP/REJECT
    if "squid" in [message] or " bird " in [message] {
      drop { }
    }

    if !(" ulogd " in [message]) {
      drop { }
    }

    if !("ACCEPT:" in [message] or "DROP:" in [message] or "REJECT:" in [message]) {
      drop { }
    }

    mutate {
      add_field => { "[event][category]" => "network" }
      add_field => { "[event][type]" => "connection" }
    }

    # Header/Präfix analysieren: Action, Context (z. B. LONGLOG / DEFAULT DROP), Regelname (z. B. internet)
    grok {
      match => {
        "message" => [
          "^<%{INT:utm.syslog.pri}>1 %{TIMESTAMP_ISO8601:utm.syslog.ts} %{DATA:utm.syslog.host} %{DATA:utm.syslog.program} %{NUMBER:utm.syslog.pid} - - %{WORD:[utm][action_raw]}: \(%{DATA:[utm][context]}\)\s*(?<rule_name>[^I]*?)\s{2}IN=%{DATA:[utm][in_iface]} .*",
          "^<%{INT:utm.syslog.pri}>1 %{TIMESTAMP_ISO8601:utm.syslog.ts} %{DATA:utm.syslog.host} %{DATA:utm.syslog.program} %{NUMBER:utm.syslog.pid} - - %{WORD:[utm][action_raw]}: \(%{DATA:[utm][context]}\)\s*IN=%{DATA:[utm][in_iface]} .*"
        ]
      }
      tag_on_failure => ["utm_grok_prefix_failed"]
    }

    

    # KV-Paare extrahieren (SRC/DST/SPT/DPT/PROTO/IN/OUT/LEN/...) aus dem gesamten message
    kv {
      source => "message"
      field_split => "\s+"
      value_split => "="
      include_keys => [
        "IN","OUT","SRC","DST","PROTO","SPT","DPT","LEN","TOS","PREC","TTL","ID","SEQ","ACK","WINDOW","URGP","MARK","TYPE","CODE","MAC"
      ]
      target => "utm"
      remove_char_key => "\""
    }

    # ECS Mapping
    mutate {
      rename => { "[utm][SRC]" => "[source][ip]" }
      rename => { "[utm][DST]" => "[destination][ip]" }
      rename => { "[utm][SPT]" => "[source][port]" }
      rename => { "[utm][DPT]" => "[destination][port]" }
      rename => { "[utm][IN]"  => "[source][interface]" }
      rename => { "[utm][OUT]" => "[destination][interface]" }
      rename => { "[utm][PROTO]" => "[network][transport]" }
      rename => { "[utm][LEN]" => "[network][bytes]" }
      rename => { "rule_name" => "[rule][name]" }
    }

    # Normalisierung / Typen
    mutate {
      lowercase => ["[network][transport]"]
      convert => {
        "[source][port]" => "integer"
        "[destination][port]" => "integer"
        "[network][bytes]" => "integer"
        "[utm][TTL]" => "integer"
        "[utm][ID]" => "integer"
        "[utm][SEQ]" => "integer"
        "[utm][ACK]" => "integer"
        "[utm][WINDOW]" => "integer"
        "[utm][URGP]" => "integer"
        "[utm][MARK]" => "integer"
        "[utm][TYPE]" => "integer"
        "[utm][CODE]" => "integer"
      }
    }

    # Action/Outcome mappen
    if [utm][action_raw] == "ACCEPT" {
      mutate {
        add_field => { "[event][action]" => "allow" }
        add_field => { "[event][outcome]" => "success" }
      }
    } else if [utm][action_raw] == "DROP" or [utm][action_raw] == "REJECT" {
      mutate {
        add_field => { "[event][action]" => "deny" }
        add_field => { "[event][outcome]" => "failure" }
      }
    }

    # Richtung ableiten (A0=WAN, A1=LAN). Einfachheuristik: OUT=A0 -> outbound, IN=A0 -> inbound, sonst internal
    if [destination][interface] == "A0" {
      mutate { add_field => { "[network][direction]" => "outbound" } }
    } else if [source][interface] == "A0" {
      mutate { add_field => { "[network][direction]" => "inbound" } }
    } else {
      mutate { add_field => { "[network][direction]" => "internal" } }
    }

    # ICMP Felder mappen (falls vorhanden)
    if [network][transport] == "icmp" {
      mutate {
        rename => { "[utm][TYPE]" => "[icmp][type]" }
        rename => { "[utm][CODE]" => "[icmp][code]" }
      }
    }

    # Aufräumen
    mutate {
      remove_field => ["utm.syslog.pri","utm.syslog.ts","utm.syslog.host","utm.syslog.program","utm.syslog.pid"]
    }

    # Zielalias für ES setzen (Mandant aus labels.kunde)
    mutate {
      add_field => { "[@metadata][es_alias]" => "logs-%{[labels][kunde]}-utm-syslog-write" }
    }

  }
}


