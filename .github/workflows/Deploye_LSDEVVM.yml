name: Deploy to LS Dev VM (rsync, selective)

on:
  push:
    branches: ["feature/**", "change/**", "bugfix/**"]
    paths:
      - "logstash/**"
      - ".github/workflows/**"
  pull_request:

env:
  LOGSTASH_VERSION: "8.13.4"

jobs:
  deploy:
    name: Deploy to LS Dev VM (rsync only changed, exclude outputs)
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4

      # === SSH + rsync vorbereiten ===
      - name: Install rsync & SSH config
        run: |
          sudo apt-get update && sudo apt-get install -y rsync
          mkdir -p "$HOME/.ssh"
          # Falls dein Key eine Passphrase hat, optional ssh-agent verwenden:
          if [ -n "${{ secrets.SSH_PASSPHRASE_LS_DEV_VM || '' }}" ]; then
            eval "$(ssh-agent -s)"
            ssh-add - <<< "${{ secrets.SSH_KEY_LS_DEV_VM }}" <<< "${{ secrets.SSH_PASSPHRASE_LS_DEV_VM }}"
          else
            echo "${{ secrets.SSH_KEY_LS_DEV_VM }}" > "$HOME/.ssh/id_ed25519"
            chmod 600 "$HOME/.ssh/id_ed25519"
          fi
          {
            echo "Host target"
            echo "  HostName ${{ secrets.SSH_HOST_LS_DEV_VM }}"
            echo "  User ${{ secrets.SSH_USER_LS_DEV_VM }}"
            echo "  Port ${{ secrets.SSH_PORT_LS_DEV_VM }}"
            if [ -z "${{ secrets.SSH_PASSPHRASE_LS_DEV_VM || '' }}" ]; then
              echo "  IdentityFile $HOME/.ssh/id_ed25519"
            fi
            echo "  StrictHostKeyChecking no"
          } >> "$HOME/.ssh/config"

      # === EDGE: pipelines → /opt/elk_dev/logstash/edge/pipelines/forwarder/ ===
      - name: RSYNC edge pipelines (exclude outputs)
        run: |
          rsync -e "ssh target" -avz --checksum \
            --exclude '99-output-to-rz.conf' \
            logstash/edge/pipelines/ \
            target:/opt/elk_dev/logstash/edge/pipelines/forwarder/

      # === EDGE: config → /opt/elk_dev/logstash/edge/config/ ===
      - name: RSYNC edge config
        run: |
          rsync -e "ssh target" -avz --checksum \
            logstash/edge/config/ \
            target:/opt/elk_dev/logstash/edge/config/

      # === RZ: pipelines → /opt/elk_dev/logstash/rz/pipelines/rz/ ===
      - name: RSYNC rz pipelines (exclude outputs)
        run: |
          rsync -e "ssh target" -avz --checksum \
            --exclude '99-output-es.conf' \
            logstash/rz/pipelines/ \
            target:/opt/elk_dev/logstash/rz/pipelines/rz/

      # === RZ: config → /opt/elk_dev/logstash/rz/config/ ===
      - name: RSYNC rz config
        run: |
          rsync -e "ssh target" -avz --checksum \
            logstash/rz/config/ \
            target:/opt/elk_dev/logstash/rz/config/

      # === Optional: kurzer Container-Check (kein Reload nötig – Auto-Reload aktiv) ===
      - name: Sanity check in containers
        run: |
          ssh target '
            docker run --rm -v /opt/elk_dev/logstash/edge/config:/usr/share/logstash/config -v /opt/elk_dev/logstash/edge/pipelines/forwarder:/usr/share/logstash/pipeline docker.elastic.co/logstash/logstash:${{ env.LOGSTASH_VERSION }} --config.test_and_exit || { echo "edge config invalid"; exit 1; }
            docker run --rm -v /opt/elk_dev/logstash/rz/config:/usr/share/logstash/config -v /opt/elk_dev/logstash/rz/pipelines/rz:/usr/share/logstash/pipeline docker.elastic.co/logstash/logstash:${{ env.LOGSTASH_VERSION }} --config.test_and_exit || { echo "rz config invalid"; exit 1; }
          '
