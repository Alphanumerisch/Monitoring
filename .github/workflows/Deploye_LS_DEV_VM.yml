name: Deploy Logstash Pipelines to DEV VM

on:
  push:
    branches: [ feature/*, change/*, bugfix/* ]
    paths:
      - 'logstash/edge/pipelines/**'
      - 'logstash/rz/pipelines/**'
  workflow_dispatch:  # Erm√∂glicht manuellen Start

jobs:
  deploy-logstash-pipelines:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.SSH_KEY_LS_DEV_VM }}
        
    - name: Prepare Edge Pipelines
      run: |
        # Erstelle tempor√§res Verzeichnis ohne die ausgeschlossene Datei
        mkdir -p temp_edge_pipelines
        
        # Kopiere alle Dateien au√üer 99-output-to-rz.conf
        cp -r logstash/edge/pipelines/* temp_edge_pipelines/ 2>/dev/null || true
        rm -f temp_edge_pipelines/99-output-to-rz.conf
        
    - name: Clean Edge Pipelines on Server
      uses: appleboy/ssh-action@v1.2.0
      with:
        host: ${{ secrets.SSH_HOST_LS_DEV_VM }}
        username: ${{ secrets.SSH_USER_LS_DEV_VM }}
        key: ${{ secrets.SSH_KEY_LS_DEV_VM }}
        port: ${{ secrets.SSH_PORT_LS_DEV_VM }}
        script: |
          # Erstelle Zielverzeichnis falls es nicht existiert
          mkdir -p /opt/elk_dev/logstash/edge/pipelines/forwarder
          
          # L√∂sche alle Dateien im Zielverzeichnis au√üer 99-output-to-rz.conf
          find /opt/elk_dev/logstash/edge/pipelines/forwarder -type f ! -name "99-output-to-rz.conf" -delete
          
    - name: Sync Edge Pipelines
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.SSH_HOST_LS_DEV_VM }}
        username: ${{ secrets.SSH_USER_LS_DEV_VM }}
        key: ${{ secrets.SSH_KEY_LS_DEV_VM }}
        port: ${{ secrets.SSH_PORT_LS_DEV_VM }}
        source: "temp_edge_pipelines/*"
        target: "/opt/elk_dev/logstash/edge/pipelines/forwarder/"
        timeout: 60s
        command_timeout: 60s
        
    - name: Prepare RZ Pipelines
      run: |
        # Erstelle tempor√§res Verzeichnis ohne die ausgeschlossene Datei
        mkdir -p temp_rz_pipelines
        
        # Kopiere alle Dateien au√üer 99-output-es.conf und input-edge.conf
        cp -r logstash/rz/pipelines/* temp_rz_pipelines/ 2>/dev/null || true
        rm -f temp_rz_pipelines/99-output-es.conf temp_rz_pipelines/input-edge.conf
        
    - name: Clean RZ Pipelines on Server
      uses: appleboy/ssh-action@v1.2.0
      with:
        host: ${{ secrets.SSH_HOST_LS_DEV_VM }}
        username: ${{ secrets.SSH_USER_LS_DEV_VM }}
        key: ${{ secrets.SSH_KEY_LS_DEV_VM }}
        port: ${{ secrets.SSH_PORT_LS_DEV_VM }}
        script: |
          # Erstelle Zielverzeichnis falls es nicht existiert
          mkdir -p /opt/elk_dev/logstash/rz/pipelines/rz
          
          # L√∂sche alle Dateien im Zielverzeichnis au√üer 99-output-to-rz.conf und input-edge.conf
          find /opt/elk_dev/logstash/rz/pipelines/rz -type f ! -name "99-output-to-rz.conf" ! -name "input-edge.conf" -delete
          
    - name: Sync RZ Pipelines
      uses: appleboy/ssh-action@v1.2.0
      with:
        host: ${{ secrets.SSH_HOST_LS_DEV_VM }}
        username: ${{ secrets.SSH_USER_LS_DEV_VM }}
        key: ${{ secrets.SSH_KEY_LS_DEV_VM }}
        port: ${{ secrets.SSH_PORT_LS_DEV_VM }}
        script: |
          # Erstelle Zielverzeichnis falls es nicht existiert
          mkdir -p /opt/elk_dev/logstash/rz/pipelines/rz
          
          # L√∂sche alle Dateien im Zielverzeichnis au√üer 99-output-to-rz.conf und input-edge.conf
          find /opt/elk_dev/logstash/rz/pipelines/rz -type f ! -name "99-output-to-rz.conf" ! -name "input-edge.conf" -delete
          
          # Erstelle tempor√§res Verzeichnis auf dem Server
          mkdir -p /tmp/rz_pipelines_upload
          
          # Kopiere alle Dateien aus temp_rz_pipelines nach /tmp/rz_pipelines_upload
          # (Dies wird √ºber einen separaten SCP-Befehl gemacht)
        
    - name: Upload RZ Pipeline Files
      run: |
        # Verwende scp direkt mit SSH-Agent
        scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -P ${{ secrets.SSH_PORT_LS_DEV_VM }} -r temp_rz_pipelines/* ${{ secrets.SSH_USER_LS_DEV_VM }}@${{ secrets.SSH_HOST_LS_DEV_VM }}:/tmp/rz_pipelines_upload/
        
    - name: Move RZ Pipeline Files to Final Location
      uses: appleboy/ssh-action@v1.2.0
      with:
        host: ${{ secrets.SSH_HOST_LS_DEV_VM }}
        username: ${{ secrets.SSH_USER_LS_DEV_VM }}
        key: ${{ secrets.SSH_KEY_LS_DEV_VM }}
        port: ${{ secrets.SSH_PORT_LS_DEV_VM }}
        script: |
          # Verschiebe Dateien von /tmp nach dem finalen Verzeichnis
          cp -r /tmp/rz_pipelines_upload/* /opt/elk_dev/logstash/rz/pipelines/rz/
          
          # Aufr√§umen
          rm -rf /tmp/rz_pipelines_upload
        
    - name: Cleanup
      run: |
        rm -rf temp_edge_pipelines temp_rz_pipelines
        
    - name: Deployment Summary
      run: |
        echo "‚úÖ Edge Pipelines erfolgreich nach /opt/elk_dev/logstash/edge/pipelines/forwarder/ synchronisiert"
        echo "‚úÖ RZ Pipelines erfolgreich nach /opt/elk_dev/logstash/rz/pipelines/rz/ synchronisiert"
        echo "üìÅ Ausgeschlossene Dateien:"
        echo "   - Edge: 99-output-to-rz.conf"
        echo "   - RZ: 99-output-es.conf"
